# roles/mcp_hub_ui/tasks/main.yml
- name: "Skip mcp_hub_ui role (disabled)"
  when: not mcp_hub_ui_enabled | bool
  ansible.builtin.debug:
    msg: "mcp_hub_ui_enabled=false, skipping."
  tags: [mcp_hub_ui]
  changed_when: false

- name: "Assert mcp-hub is installed and executable"
  when: mcp_hub_ui_enabled | bool
  become: true
  become_user: "{{ mcp_hub_ui_user }}"
  ansible.builtin.command:
    cmd: "{{ mcp_hub_ui_bin }} --version"
  register: _hub_ver
  changed_when: false
  tags: [mcp_hub_ui]

- name: "Show mcp-hub version"
  when: mcp_hub_ui_enabled | bool
  ansible.builtin.debug:
    msg: "mcp-hub version: {{ _hub_ver.stdout | default('unknown') }}"
  tags: [mcp_hub_ui]

- name: "Enable lingering for {{ mcp_hub_ui_user }} (so user services run in background)"
  when: mcp_hub_ui_enabled | bool and mcp_hub_ui_enable_lingering | bool
  become: true
  ansible.builtin.command: "loginctl enable-linger {{ mcp_hub_ui_user }}"
  changed_when: false
  failed_when: false
  tags: [mcp_hub_ui]

- name: "Ensure user systemd dir exists"
  when: mcp_hub_ui_enabled | bool
  become: true
  become_user: "{{ mcp_hub_ui_user }}"
  ansible.builtin.file:
    path: "~/.config/systemd/user"
    state: directory
    mode: "0755"
  tags: [mcp_hub_ui]

- name: "Install user unit: mcp-hub-ui.service"
  when: mcp_hub_ui_enabled | bool
  become: true
  become_user: "{{ mcp_hub_ui_user }}"
  ansible.builtin.template:
    src: "mcp-hub-ui.service.j2"
    dest: "~/.config/systemd/user/mcp-hub-ui.service"
    mode: "0644"
  tags: [mcp_hub_ui]

- name: "User systemd daemon-reload"
  when: mcp_hub_ui_enabled | bool
  become: true
  become_user: "{{ mcp_hub_ui_user }}"
  ansible.builtin.command: "systemctl --user daemon-reload"
  changed_when: false
  failed_when: false
  tags: [mcp_hub_ui]

- name: "Enable/Start mcp-hub-ui.service"
  when: mcp_hub_ui_enabled | bool
  become: true
  become_user: "{{ mcp_hub_ui_user }}"
  ansible.builtin.systemd:
    name: mcp-hub-ui.service
    scope: user
    enabled: true
    state: started
    daemon_reload: false
  tags: [mcp_hub_ui]

# Try, then diagnose on failure
- block:
    - name: "Wait for MCP Hub UI to listen on {{ mcp_hub_ui_port }}"
      when: mcp_hub_ui_enabled | bool
      ansible.builtin.wait_for:
        host: "127.0.0.1"
        port: "{{ mcp_hub_ui_port }}"
        timeout: "{{ mcp_hub_ui_wait_timeout }}"
      register: _ui_wait
      tags: [mcp_hub_ui]

  rescue:
    - name: "DIAG: systemctl --user status mcp-hub-ui.service"
      become: true
      become_user: "{{ mcp_hub_ui_user }}"
      ansible.builtin.command:
        cmd: "systemctl --user status mcp-hub-ui.service --no-pager"
      register: _ui_status
      changed_when: false
      failed_when: false
      tags: [mcp_hub_ui]

    - name: "DIAG: journalctl (last 200 lines)"
      become: true
      become_user: "{{ mcp_hub_ui_user }}"
      ansible.builtin.command:
        cmd: "journalctl --user -u mcp-hub-ui.service -n 200 --no-pager"
      register: _ui_journal
      changed_when: false
      failed_when: false
      tags: [mcp_hub_ui]

    - name: "DIAG: show status/journal"
      ansible.builtin.debug:
        msg:
          - "Wait for port {{ mcp_hub_ui_port }} failed; here are diagnostics:"
          - "{{ _ui_status.stdout | default('') }}"
          - "{{ _ui_journal.stdout | default('') }}"
      tags: [mcp_hub_ui]

    - name: "Fail: MCP Hub UI did not bind to port {{ mcp_hub_ui_port }}"
      ansible.builtin.fail:
        msg: "MCP Hub UI did not listen on 127.0.0.1:{{ mcp_hub_ui_port }} within {{ mcp_hub_ui_wait_timeout }}s. See diagnostics above."
      tags: [mcp_hub_ui]

- name: "Debug: UI URL"
  when: mcp_hub_ui_enabled | bool
  ansible.builtin.debug:
    msg: "MCP Hub UI is up: http://localhost:{{ mcp_hub_ui_port }}"
  tags: [mcp_hub_ui]

