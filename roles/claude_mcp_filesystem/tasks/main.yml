---
- name: Ensure npm/npx is available
  become: true
  community.general.pacman:
    name: npm
    state: present
  tags: [claude_mcp_filesystem]

- name: Verify npx is in PATH
  ansible.builtin.command: which npx
  register: npx_check
  changed_when: false
  failed_when: npx_check.rc != 0
  tags: [claude_mcp_filesystem]

- name: Ensure Claude Desktop config directory exists
  become: true
  become_user: "{{ claude_user }}"
  ansible.builtin.file:
    path: "{{ claude_config_dir }}"
    state: directory
    mode: "0755"
  tags: [claude_mcp_filesystem]

- name: Check if Claude Desktop config already exists
  become: true
  become_user: "{{ claude_user }}"
  ansible.builtin.stat:
    path: "{{ claude_config_file }}"
  register: claude_config_stat
  tags: [claude_mcp_filesystem]

- name: Read existing Claude Desktop config
  become: true
  become_user: "{{ claude_user }}"
  ansible.builtin.slurp:
    path: "{{ claude_config_file }}"
  register: claude_config_slurp
  when: claude_config_stat.stat.exists
  tags: [claude_mcp_filesystem]

- name: Try to parse existing config as JSON
  ansible.builtin.set_fact:
    existing_config: "{{ claude_config_slurp.content | b64decode | from_json }}"
  when: claude_config_stat.stat.exists
  register: parse_result
  ignore_errors: true
  tags: [claude_mcp_filesystem]

- name: Display warning for invalid JSON
  ansible.builtin.debug:
    msg:
      - "⚠️  WARNING: Existing Claude Desktop config contains invalid JSON"
      - "File: {{ claude_config_file }}"
      - "The file will be backed up and replaced with valid configuration"
      - "Backup location: {{ claude_config_file }}.backup-invalid-{{ ansible_date_time.epoch }}"
  when:
    - claude_config_stat.stat.exists
    - parse_result is failed
  tags: [claude_mcp_filesystem]

- name: Backup invalid config file
  become: true
  become_user: "{{ claude_user }}"
  ansible.builtin.copy:
    src: "{{ claude_config_file }}"
    dest: "{{ claude_config_file }}.backup-invalid-{{ ansible_date_time.epoch }}"
    mode: "0644"
    remote_src: true
  when:
    - claude_config_stat.stat.exists
    - parse_result is failed
  tags: [claude_mcp_filesystem]

- name: Set empty config if parsing failed or file doesn't exist
  ansible.builtin.set_fact:
    existing_config: {}
  when: >
    (not claude_config_stat.stat.exists) or
    (parse_result is failed)
  tags: [claude_mcp_filesystem]

- name: Backup existing valid config (if it exists and is valid)
  become: true
  become_user: "{{ claude_user }}"
  ansible.builtin.copy:
    src: "{{ claude_config_file }}"
    dest: "{{ claude_config_file }}.backup-{{ ansible_date_time.epoch }}"
    mode: "0644"
    remote_src: true
  when:
    - claude_backup_config | bool
    - claude_config_stat.stat.exists
    - parse_result is succeeded
  tags: [claude_mcp_filesystem]

- name: Build filesystem MCP server configuration
  ansible.builtin.set_fact:
    filesystem_server_config:
      command: "npx"
      args: "{{ ['-y', filesystem_server_package] + filesystem_allowed_directories }}"
      env: {}
  tags: [claude_mcp_filesystem]

- name: Build target configuration (merge with existing)
  ansible.builtin.set_fact:
    target_config: >-
      {{
        (existing_config | default({}))
        | combine(
            {
              'mcpServers': (existing_config.mcpServers | default({}))
              | combine({'filesystem': filesystem_server_config})
            },
            recursive=True
          )
      }}
  tags: [claude_mcp_filesystem]

- name: Write Claude Desktop configuration using template
  become: true
  become_user: "{{ claude_user }}"
  ansible.builtin.template:
    src: claude_desktop_config.json.j2
    dest: "{{ claude_config_file }}"
    mode: "0644"
    backup: false
  register: config_written
  tags: [claude_mcp_filesystem]

- name: Validate JSON syntax
  ansible.builtin.command:
    cmd: "jq empty {{ claude_config_file }}"
  become: true
  become_user: "{{ claude_user }}"
  changed_when: false
  tags: [claude_mcp_filesystem]

- name: Display configuration summary
  ansible.builtin.debug:
    msg:
      - "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
      - "✓ Claude Desktop filesystem MCP server configured"
      - ""
      - "Configuration: {{ claude_config_file }}"
      - "Accessible directories:"
      - "{{ filesystem_allowed_directories | to_nice_yaml }}"
      - ""
      - "Total MCP servers in config: {{ target_config.mcpServers.keys() | list | length }}"
      - "Active servers: {{ target_config.mcpServers.keys() | list | join(', ') }}"
      - ""
      - "NEXT STEPS:"
      - "1. Restart Claude Desktop completely (quit, don't just close)"
      - "2. Look for MCP icon (🔌) in bottom-right of Claude Desktop"
      - "3. Click it to verify 'filesystem' server shows green"
      - "4. Test: Ask Claude 'Can you list files in my ~/src directory?'"
      - "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
  when: config_written.changed
  tags: [claude_mcp_filesystem]
