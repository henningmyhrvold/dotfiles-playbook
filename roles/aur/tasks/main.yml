---
- name: Ensure target user is in wheel group
  user:
    name: "{{ target_user }}"
    groups: wheel
    append: yes
  become: true
  tags: ['aur']
  
- name: Backup original sudoers file
  ansible.builtin.copy:
    src: /etc/sudoers
    dest: /etc/sudoers.ansible_backup
    owner: "{{ 'root' }}"
    mode: "0644"
    remote_src: yes
  become: true
  tags: ['aur']

- name: Allow wheel group to sudo without password
  lineinfile:
    path: /etc/sudoers
    regexp: '^# %wheel ALL=\(ALL:ALL\) ALL'
    line: '%wheel ALL=(ALL:ALL) NOPASSWD: ALL'
    validate: /usr/sbin/visudo -cf %s
  become: true
  tags: ['aur']
  
- name: Set sudo timestamp timeout for target user
  lineinfile:
    path: /etc/sudoers
    line: 'Defaults:{{ target_user }} timestamp_timeout=60'
    validate: /usr/sbin/visudo -cf %s
  become: true
  tags: ['aur']

- name: AUR - Build and install paru from cloned source
  ansible.builtin.shell:
    cmd: "makepkg -si --noconfirm"
    chdir: "/home/{{ target_user }}/src/external/paru-git"
  become: true
  become_user: "{{ target_user }}"
  args:
    # This task should only run if the paru binary does not already exist
    creates: /usr/bin/paru
  tags: ['aur']

- name: AUR - Install packages from aur_installed_packages list
  kewlfft.aur.aur:
    name: "{{ item }}"
    use: paru
    state: present
  with_items: "{{ aur_installed_packages }}"
  become: true
  become_user: "{{ target_user }}"
  when: aur_installed_packages is defined
  tags: ['aur']
  
- name: AUR - Update all packages
  ansible.builtin.shell:
    cmd: "paru -Syu --noconfirm"
  become: true
  become_user: "{{ target_user }}"
  tags: ['aur']
