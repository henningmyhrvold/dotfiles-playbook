---
- name: Add target user to wheel group
  user:
    name: "{{ target_user }}"
    groups: wheel
    append: true
  tags: ['aur']

- name: Enable passwordless sudo for wheel group
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    # This regexp matches the wheel group line, whether it's commented out or not
    regexp: '^(#\s*)?%wheel ALL=\(ALL:ALL\) ALL'
    # This replaces it with the active NOPASSWD version
    line: '%wheel ALL=(ALL:ALL) NOPASSWD: ALL'
    validate: '/usr/sbin/visudo -cf %s'
    backrefs: yes
  tags: ['aur']

- name: AUR - Build and install paru from cloned source
  ansible.builtin.shell:
    cmd: "makepkg -si --noconfirm"
    chdir: "/home/{{ target_user }}/src/external/paru-git"
  become: true
  become_user: "{{ target_user }}"
  args:
    creates: /usr/bin/paru
  tags: ['aur']

- name: AUR - Install packages from aur_installed_packages list
  kewlfft.aur.aur:
    name: "{{ item }}"
    use: paru
    state: present
  with_items: "{{ aur_installed_packages }}"
  become: true
  become_user: "{{ target_user }}"
  when: aur_installed_packages is defined
  tags: ['aur']

- name: AUR - Update all packages
  ansible.builtin.shell:
    cmd: "paru -Syu --noconfirm"
  become: true
  become_user: "{{ target_user }}"
  tags: ['aur']

- name: Revert passwordless sudo to require password for wheel group
  lineinfile:
    path: /etc/sudoers
    regexp: '^%wheel ALL=\(ALL:ALL\) NOPASSWD: ALL'
    line: '%wheel ALL=(ALL:ALL) ALL'
    validate: '/usr/sbin/visudo -cf %s'
  tags: ['aur']

- name: Remove target user from wheel group
  user:
    name: "{{ target_user }}"
    groups: "{{ target_user }}"
    append: false
  tags: ['aur']
