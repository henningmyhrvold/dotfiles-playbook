---
- name: aur - Ensure target user is in wheel group
  user:
    name: "{{ target_user }}"
    groups: wheel
    append: yes
  become: true
  tags: ['aur']

- name: aur - Allow wheel group to sudo without password
  lineinfile:
    path: /etc/sudoers
    regexp: '^# %wheel ALL=\(ALL:ALL\) ALL'
    line: '%wheel ALL=(ALL:ALL) NOPASSWD: ALL'
    validate: /usr/sbin/visudo -cf %s
    backup: yes
  become: true
  tags: ['aur']

- name: aur - Install paru build dependencies
  community.general.pacman:
    name: rust
    state: present
  become: true
  tags: ['aur']

- name: aur - Build paru package (no install or dep sync)
  ansible.builtin.shell:
    cmd: "makepkg --noconfirm"
    chdir: "/home/{{ target_user }}/src/external/paru-git"
  become: true
  become_user: "{{ target_user }}"
  args:
    creates: "/home/{{ target_user }}/src/external/paru-git/paru-git*.pkg.tar.zst"
  tags: ['aur']

- name: aur - Find built paru package
  find:
    paths: "/home/{{ target_user }}/src/external/paru-git"
    patterns: "*.pkg.tar.zst"
  register: paru_package
  become: true
  tags: ['aur']

- name: aur - Install paru package as root
  command: "pacman -U --noconfirm {{ paru_package.files[0].path }}"
  args:
    creates: /usr/bin/paru
  become: true
  tags: ['aur']

- name: aur - Revert wheel group sudo without password
  lineinfile:
    path: /etc/sudoers
    regexp: '^%wheel ALL=\(ALL:ALL\) NOPASSWD: ALL'
    line: '# %wheel ALL=(ALL:ALL) ALL'
    validate: /usr/sbin/visudo -cf %s
    backup: yes
  become: true
  tags: ['aur']

- name: aur - Remove target user from wheel group
  command: "gpasswd -d {{ target_user }} wheel"
  become: true
  tags: ['aur']
